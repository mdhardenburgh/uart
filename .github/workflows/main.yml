name: CI (Verilator)

on:
  pull_request:
    # By default this fires on: opened, synchronize (new commits), reopened
    # which matches "PR is created" and "new push occurs to that PR branch".
    types: [opened, synchronize, reopened, ready_for_review]
    branches: ["**"]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    # Run the whole job inside your Docker Hub image
    container:
      image: docker.io/mhardenb/verilator:stable

    #defaults:
    #  run:
    #    shell: bash -eo pipefail

    steps:
      - name: Check out repo
      # If svTest or anything is fetched via CMake/FetchContent, we still need only the main repo here
        uses: actions/checkout@v4

      - name: Show tool versions
        run: |
          which verilator || true
          verilator --version || true
          cmake --version || true
          g++ --version || true
          git --version || true

      - name: Configure (CMake)
        run: cmake -S . -B build

      - name: Build transmitterTb
        run: cmake --build build --target transmitterTb -- -j$(nproc)

      - name: Build recieverTb
        run: cmake --build build --target recieverTb -- -j$(nproc)

      - name: Run transmitterTb
        run: |
          BIN="$(find build -type f -name transmitterTb -perm -111 | head -n1)"
          if [[ -z "$BIN" ]]; then
            echo "::error::Could not locate transmitterTb executable in build tree"; exit 1
          fi
          echo "Running $BIN"
          "$BIN"

      - name: Run recieverTb
        run: |
          BIN="$(find build -type f -name recieverTb -perm -111 | head -n1)"
          if [[ -z "$BIN" ]]; then
            echo "::error::Could not locate recieverTb executable in build tree"; exit 1
          fi
          echo "Running $BIN"
          "$BIN"